"use strict";(self.webpackChunk_2_oodlib=self.webpackChunk_2_oodlib||[]).push([[8686],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(r),k=o,m=d["".concat(s,".").concat(k)]||d[k]||c[k]||a;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=k;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}k.displayName="MDXCreateElement"},86958:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var n=r(87462),o=(r(67294),r(3905));const a={},i=void 0,l={unversionedId:"lecture-notes/networks/2023-11-02",id:"lecture-notes/networks/2023-11-02",title:"2023-11-02",description:"Summary",source:"@site/docs/lecture-notes/networks/2023-11-02.md",sourceDirName:"lecture-notes/networks",slug:"/lecture-notes/networks/2023-11-02",permalink:"/oodlib/docs/lecture-notes/networks/2023-11-02",draft:!1,editUrl:"https://github.com/2ood/oodlib/blob/master/docs/lecture-notes/networks/2023-11-02.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"2023-10-17",permalink:"/oodlib/docs/lecture-notes/networks/2023-10-17"},next:{title:"2023-11-07",permalink:"/oodlib/docs/lecture-notes/networks/2023-11-07"}},s={},p=[{value:"Forwarding",id:"forwarding",level:3},{value:"Two key network payer functions",id:"two-key-network-payer-functions",level:2},{value:"1) forwarding",id:"1-forwarding",level:3},{value:"Data plane",id:"data-plane",level:2},{value:"Control plane",id:"control-plane",level:2},{value:"Network Service model",id:"network-service-model",level:2},{value:"Internet",id:"internet",level:3},{value:"Other Network Service models",id:"other-network-service-models",level:3},{value:"Why is best-effort service model is popular?",id:"why-is-best-effort-service-model-is-popular",level:2},{value:"What is inside the router?",id:"what-is-inside-the-router",level:2},{value:"input port",id:"input-port",level:3},{value:"Destination-based forwarding",id:"destination-based-forwarding",level:3},{value:"Longest prefix matching",id:"longest-prefix-matching",level:3},{value:"Switching Fabrics",id:"switching-fabrics",level:3}],u={toc:p},d="wrapper";function c(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Summary"))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"keywords"),"\nforwarding")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"TODO"))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"HW"))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Exercise*")," ")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Next time"))),(0,o.kt)("hr",null),(0,o.kt)("h1",{id:"network-layer-data-plane"},"Network Layer: data plane"),(0,o.kt)("p",null,"Chapter 4 (data plane): forwarding, network layer model, how switches & router works, addressing, generalized forwarding, NAT, middleboxes\nChapter 5 (control plane): "),(0,o.kt)("p",null,"What is inside a router\ninput ports, switching, output ports, "),(0,o.kt)("p",null,"IP addresses."),(0,o.kt)("p",null,"SDN : Software Defined Network.\nOpenflow"),(0,o.kt)("p",null,"At network layer your header is called datagram."),(0,o.kt)("h3",{id:"forwarding"},"Forwarding"),(0,o.kt)("p",null,"Access point router will examine on network layer header.\nand moves the datagram from input port to output port."),(0,o.kt)("p",null,"Network switches "),(0,o.kt)("h2",{id:"two-key-network-payer-functions"},"Two key network payer functions"),(0,o.kt)("h3",{id:"1-forwarding"},"1) forwarding"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"process of getting through an Interchange"),(0,o.kt)("h3",{parentName:"blockquote",id:"2-routing"},"2) routing"),(0,o.kt)("p",{parentName:"blockquote"},"process of finding the trip routes.")),(0,o.kt)("h2",{id:"data-plane"},"Data plane"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"local, per-router function"),(0,o.kt)("li",{parentName:"ul"},"determines how datagram arriving at input port is forwarded to output port")),(0,o.kt)("h2",{id:"control-plane"},"Control plane"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"network wide logic."),(0,o.kt)("li",{parentName:"ul"},"determines the forwarding table."),(0,o.kt)("li",{parentName:"ul"},"two ways",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"traditional vs. SDN")))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"in traditional way, the cost between routers are shared among routers."),(0,o.kt)("li",{parentName:"ul"},"In SDN, the Control ageents inside routers share information only with distributed controllers. routers don't need to talk each other.")),(0,o.kt)("p",null,"What is the benefit of SDN?"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"easier for embedding new features.")),(0,o.kt)("h2",{id:"network-service-model"},"Network Service model"),(0,o.kt)("p",null,"What do we require to the service model of a network?"),(0,o.kt)("p",null,"#todo : difference between network architecture, service"),(0,o.kt)("h3",{id:"internet"},"Internet"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},'"Internet" model is ',(0,o.kt)("strong",{parentName:"li"},"best effort")," service model of this time."),(0,o.kt)("li",{parentName:"ul"},"It ",(0,o.kt)("strong",{parentName:"li"},"doesn't do any guarantee")," of Quality of Service (throughput, loss, ordering, delay). "),(0,o.kt)("li",{parentName:"ul"},"Those properties are guaranteed on TCP, a transport layer."),(0,o.kt)("li",{parentName:"ul"},"Core is simple, and all the complicated logic is done at the edge.")),(0,o.kt)("h3",{id:"other-network-service-models"},"Other Network Service models"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"ATM architecture,,,,,"),(0,o.kt)("li",{parentName:"ul"},"They are not popular because of too much overhead."),(0,o.kt)("li",{parentName:"ul"},"There are some other service models with Internet architechture. to implement, the routers  configuration is needed.")),(0,o.kt)("h2",{id:"why-is-best-effort-service-model-is-popular"},"Why is best-effort service model is popular?"),(0,o.kt)("p",null,"1) simplicity of mechanism\n2) easy to extend the network.\n3) we have enough bandwidth for current traffic, and good enough performance. "),(0,o.kt)("h2",{id:"what-is-inside-the-router"},"What is inside the router?"),(0,o.kt)("p",null,"router has input ports, high-speed switching fabric, routing processor, output ports.\n#todo : add image of the router"),(0,o.kt)("p",null,"in high-speed switching fabric, all logic is embedded in hardware level."),(0,o.kt)("h3",{id:"input-port"},"input port"),(0,o.kt)("p",null,"1) read the 0,1,0,1 coming from the line termination.\n2) comprehend the link layer protocol\n3) lookup in input port memory\n4) and forward to the output port through the right switch fabric\nThis is called ",(0,o.kt)("strong",{parentName:"p"},"decentralized switching"),".\nThis forwarding should be completed at line speed. Otherwise, queueing happens inside."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Destination based forwarding")," : forward only based on destination IP address (prefix matching). Simple and affordable."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"generalized forwarding(SDN)")," : it compares many other header fields for priority, for firewall, ...complicated and expensive.")),(0,o.kt)("h3",{id:"destination-based-forwarding"},"Destination-based forwarding"),(0,o.kt)("p",null,"#todo : add example forwarding images."),(0,o.kt)("p",null,"It is range-based. It is based on the ",(0,o.kt)("strong",{parentName:"p"},"longest prefix matching"),". "),(0,o.kt)("h3",{id:"longest-prefix-matching"},"Longest prefix matching"),(0,o.kt)("p",null,"to catch up the line speed, specialized hardware, named TCAMs, is used.\nTCAM is a memory space with come computational circuitry. can do in one clock cycle.\nTCAMs is content addressable. "),(0,o.kt)("p",null,"`",(0,o.kt)("inlineCode",{parentName:"p"},"</prefix matching>")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"</switching>")),(0,o.kt)("h3",{id:"switching-fabrics"},"Switching Fabrics"),(0,o.kt)("p",null,"switch rate : N input ports, S line speed = N*S switch rate\nThree major types of switching fabrics"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"memory"),(0,o.kt)("li",{parentName:"ul"},"bus"),(0,o.kt)("li",{parentName:"ul"},"interconnected fabric")),(0,o.kt)("p",null,"1) Memory "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"speed limited by memory bandwidth."),(0,o.kt)("li",{parentName:"ul"},"2 bus crossings per datagram.")))}c.isMDXComponent=!0}}]);