"use strict";(self.webpackChunk_2_oodlib=self.webpackChunk_2_oodlib||[]).push([[6824],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>f});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function s(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?s(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),l=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},u=function(e){var r=l(e.components);return n.createElement(p.Provider,{value:r},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},c=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,s=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=l(t),c=a,f=m["".concat(p,".").concat(c)]||m[c]||d[c]||s;return t?n.createElement(f,o(o({ref:r},u),{},{components:t})):n.createElement(f,o({ref:r},u))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var s=t.length,o=new Array(s);o[0]=c;var i={};for(var p in r)hasOwnProperty.call(r,p)&&(i[p]=r[p]);i.originalType=e,i[m]="string"==typeof e?e:a,o[1]=i;for(var l=2;l<s;l++)o[l]=t[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},74991:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var n=t(87462),a=(t(67294),t(3905));const s={},o="5. Request and Response",i={unversionedId:"programming/django-rest-framework/request-and-response",id:"programming/django-rest-framework/request-and-response",title:"5. Request and Response",description:"0. Overview",source:"@site/docs/programming/django-rest-framework/5-request-and-response.md",sourceDirName:"programming/django-rest-framework",slug:"/programming/django-rest-framework/request-and-response",permalink:"/oodlib/docs/programming/django-rest-framework/request-and-response",draft:!1,editUrl:"https://github.com/2ood/oodlib/blob/master/docs/programming/django-rest-framework/5-request-and-response.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"4. Serializer",permalink:"/oodlib/docs/programming/django-rest-framework/serializer"},next:{title:"6. Class based Views",permalink:"/oodlib/docs/programming/django-rest-framework/class-based-views"}},p={},l=[{value:"0. Overview",id:"0-overview",level:2},{value:"1. Request, Response class",id:"1-request-response-class",level:2},{value:"2. \uc0ac\uc6a9\ub840",id:"2-\uc0ac\uc6a9\ub840",level:2}],u={toc:l},m="wrapper";function d(e){let{components:r,...t}=e;return(0,a.kt)(m,(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"5-request-and-response"},"5. Request and Response"),(0,a.kt)("h2",{id:"0-overview"},"0. Overview"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"RESTful\ud558\uac8c request\ub97c \ubc1b\uace0 response\ub97c \ubcf4\ub0b4\ub294 \ubc29\ubc95\uc744 \uc5f0\uc2b5\ud574\ubcf8\ub2e4.")),(0,a.kt)("h2",{id:"1-request-response-class"},"1. Request, Response class"),(0,a.kt)("p",null,"Django\uc5d0\uc11c\ub294 Request\uc640 Response\ub97c object\ub85c \uc815\ub9ac\ud574 \uc81c\uacf5\ud55c\ub2e4. "),(0,a.kt)("p",null,"Request"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Request"),"\ub294 ",(0,a.kt)("inlineCode",{parentName:"li"},"HttpRequest"),"\ub97c extend \ubc1b\uc544 \ub9cc\ub4e4\uc5b4\uc9d0. "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Request.data"),"\ub85c \ubc14\ub514\ub97c \ub123\uc744 \uc218 \uc788\uc74c. (\uae30\uc874 ",(0,a.kt)("inlineCode",{parentName:"li"},"request.POST"),"\uacfc \ube44\uc2b7)")),(0,a.kt)("p",null,"Response"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"TemplateResponse"),"\ub97c extend \ubc1b\uc544 \ub9cc\ub4e4\uc5b4\uc9d0. "),(0,a.kt)("li",{parentName:"ul"},"\ub2e4\uc74c\uacfc \uac19\uc774 \uc0ac\uc6a9\ud558\uba74 \ub428. ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"return Response(data)\n")),(0,a.kt)("h2",{id:"2-\uc0ac\uc6a9\ub840"},"2. \uc0ac\uc6a9\ub840"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"request.method"),"\ub97c \ud1b5\ud574 \ud604\uc7ac \uc694\uccad\ud55c \uba54\uc11c\ub4dc \ubc29\uc2dd \uc54c\uc544\ub0b4\uae30."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Response(data, status=<status.HTTP...>)"),"\ud615\uc2dd\uc73c\ub85c return\ud558\uba74 \ub428. ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"from rest_framework import status\nfrom rest_framework.decorators import api_view\nfrom rest_framework.response import Response\nfrom snippets.models import Snippet\nfrom snippets.serializers import SnippetSerializer\n\n\n@api_view(['GET', 'POST'])\ndef snippet_list(request):\n    \"\"\"\n    List all code snippets, or create a new snippet.\n    \"\"\"\n    if request.method == 'GET':\n        snippets = Snippet.objects.all()\n        serializer = SnippetSerializer(snippets, many=True)\n        return Response(serializer.data)\n\n    elif request.method == 'POST':\n        serializer = SnippetSerializer(data=request.data)\n        if serializer.is_valid():\n            serializer.save()\n            return Response(serializer.data, status=status.HTTP_201_CREATED)\n        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"from django.urls import path\nfrom rest_framework.urlpatterns import format_suffix_patterns\nfrom snippets import views\n\nurlpatterns = [\n    path('snippets/', views.snippet_list),\n    path('snippets/<int:pk>/', views.snippet_detail),\n]\n\nurlpatterns = format_suffix_patterns(urlpatterns)\n")))}d.isMDXComponent=!0}}]);