"use strict";(self.webpackChunk_2_oodlib=self.webpackChunk_2_oodlib||[]).push([[2369],{95355:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>r,toc:()=>a});var i=t(74848),o=t(28453);const l={},s="Introduction",r={id:"lecture-notes/algorithms/2023-09-06",title:"Introduction",description:"Summary",source:"@site/docs/lecture-notes/algorithms/2023-09-06.md",sourceDirName:"lecture-notes/algorithms",slug:"/lecture-notes/algorithms/2023-09-06",permalink:"/oodlib/docs/lecture-notes/algorithms/2023-09-06",draft:!1,unlisted:!1,editUrl:"https://github.com/2ood/oodlib/blob/master/docs/lecture-notes/algorithms/2023-09-06.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/oodlib/docs/lecture-notes/algorithms/2023-09-04"},next:{title:"Introduction",permalink:"/oodlib/docs/lecture-notes/algorithms/2023-09-11"}},c={},a=[{value:"Goal",id:"goal",level:2},{value:"How do you analyze algorithm?",id:"how-do-you-analyze-algorithm",level:2},{value:"How to calculate",id:"how-to-calculate",level:2},{value:"Other Asysmptotic notations",id:"other-asysmptotic-notations",level:2}];function h(n){const e={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Summary"}),"\nThree times"]}),"\n"]}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"keywords"}),"\nalgorithm analysis, growth of functions, asymptotic notation, big-O, omega, theta functions"]}),"\n"]}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"TODO"}),"\n#todo : see through book and find 3 more sorting algorithms and learn.\nThey are not popular because they use high space complexity"]}),"\n"]}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"HW"})}),"\n"]}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Exercise"}),"* $\\Omega(n)$\nDraw the function stack steps."]}),"\n"]}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Next time"})}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h1,{id:"recap",children:"Recap"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"caution"}),"\nIn merge sort, we are not talking about parallel programming.\nIt's a sequential excecution.\nEach function call is stacked in function call stack, paused when calling a smaller recursive functions."]}),"\n",(0,i.jsx)(e.p,{children:"We can implement mergesort with less memory usage.\nTry not to copy the array and pass (or sort)."}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h1,{id:"algorithm-analysis",children:"Algorithm Analysis"}),"\n",(0,i.jsx)(e.p,{children:"(The book is analyzing algorithm one by one, each after introducing the algorithm)"}),"\n",(0,i.jsx)(e.h2,{id:"goal",children:"Goal"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"We should be able to tell the time complexity just by seeing the code."}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"how-do-you-analyze-algorithm",children:"How do you analyze algorithm?"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Check runtime (experimental approach)"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Why do we not do experimental approach?"}),"\n",(0,i.jsx)(e.li,{children:"It is dependant to the experimenting infrastructure(data, machine, language..)"}),"\n",(0,i.jsx)(e.li,{children:"Some algorithms is executed in so small time."}),"\n",(0,i.jsx)(e.li,{children:"Cannot test on small parts of a big code. should excecute the whole code."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"compute the time complexity (theoretical approach)"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h1,{id:"asymptotic-analysis",children:"Asymptotic Analysis"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"We count the number of primitive operations."}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["We are  ",(0,i.jsx)(e.strong,{children:"only"})," interested in the ",(0,i.jsx)(e.strong,{children:"pattern of growth"})," of runtime when input grows."]}),"\n",(0,i.jsxs)(e.li,{children:["Thus we ",(0,i.jsx)(e.strong,{children:"only"})," consider of the dominant terms (namely, that of highest order)."]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"We use notation as a function of input (ex. $f(n)$)"}),"\n",(0,i.jsx)(e.p,{children:"There are three types"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"$O(n)$ :"}),"\n",(0,i.jsx)(e.li,{children:"$\\Omega(n)$ :"}),"\n",(0,i.jsx)(e.li,{children:"$\\Theta(n)$ : tight bond"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"#todo : fill out three functions"}),"\n",(0,i.jsx)(e.h1,{id:"big-o-notation",children:"Big-O notation"}),"\n",(0,i.jsx)(e.p,{children:"The maximal runtime growth."}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Constant $O(1)$"}),"\n",(0,i.jsx)(e.li,{children:"Logarithmic $O(log;n)$"}),"\n",(0,i.jsx)(e.li,{children:"linear $O(n)$"}),"\n",(0,i.jsx)(e.li,{children:"nlogn $O(n;log(n))$"}),"\n",(0,i.jsx)(e.li,{children:"Quadratic $O(n^2)$"}),"\n",(0,i.jsx)(e.li,{children:"exponential $O(a^n)$"}),"\n",(0,i.jsx)(e.li,{children:"factorial $O(n!)$"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"Usually The stage can be downgraded (more efficiently)"}),"\n",(0,i.jsx)(e.h2,{id:"how-to-calculate",children:"How to calculate"}),"\n",(0,i.jsx)(e.p,{children:"There are cost ( $c$ )of the operation, and the count ( $t$ ) of operation\ncount each iterations, and check the highest order term."}),"\n",(0,i.jsx)(e.p,{children:"Caution"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"include the loop index refreshing statements, and loop checking statements"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"Examples"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Example 1 \uc740 $O(n^2)$?"}),"\n",(0,i.jsx)(e.li,{children:"Example 2 \uc740 $O(n^2)$?"}),"\n",(0,i.jsx)(e.li,{children:"Example 3 \ub294 $p$<$n$ \uc774\uae30 \ub54c\ubb38\uc5d0 $ O( \\sqrt n )$"}),"\n",(0,i.jsx)(e.li,{children:"Example 4 \ub294 $O(\\log_2 n)$"}),"\n",(0,i.jsx)(e.li,{children:"Example 5 \ub294 $O(\\log_2 n)$"}),"\n",(0,i.jsx)(e.li,{children:"Example 6 $O(n)$"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"p=0\nfor (int i=0<i<n;i=i*2) {\n\tp++;\n}\nfor(int j=0;j<p;j=j*2) {\n\tstatement;\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:"2nd loop in code above has time complexity of $O(\\log p)$. So, the code is $O(\\log n + \\log \\log n)$  -> $O(\\log n)$"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"p=0;\nfor (int i=0; i<n;i++) {\n\tfor(int j=1;j<n;j*2) {\n\t\tstmt;\n\t}\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:"The code is $O(n \\log n)$"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"for (int i=0;i<n;i++) {\n\tstmt;\n}\n\nfor (int j=o;j<k;j++) {\n\tstmt;\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:"The code is $O(n+k)$"}),"\n",(0,i.jsx)(e.p,{children:"#todo : do the examples of calculating big-O of several codes."}),"\n",(0,i.jsx)(e.h2,{id:"other-asysmptotic-notations",children:"Other Asysmptotic notations"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Theta : tight bound"}),"\n",(0,i.jsx)(e.li,{children:"Big -O : Upper bound"}),"\n",(0,i.jsx)(e.li,{children:"Omega : Lower Bound"}),"\n"]})]})}function d(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(h,{...n})}):h(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>r});var i=t(96540);const o={},l=i.createContext(o);function s(n){const e=i.useContext(l);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),i.createElement(l.Provider,{value:e},n.children)}}}]);