"use strict";(self.webpackChunk_2_oodlib=self.webpackChunk_2_oodlib||[]).push([[8470],{45976:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>a,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var r=i(74848),t=i(28453);const l={},s=void 0,o={id:"lecture-notes/networks/2023-11-07",title:"2023-11-07",description:"Summary",source:"@site/docs/lecture-notes/networks/2023-11-07.md",sourceDirName:"lecture-notes/networks",slug:"/lecture-notes/networks/2023-11-07",permalink:"/oodlib/docs/lecture-notes/networks/2023-11-07",draft:!1,unlisted:!1,editUrl:"https://github.com/2ood/oodlib/blob/master/docs/lecture-notes/networks/2023-11-07.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"2023-11-02",permalink:"/oodlib/docs/lecture-notes/networks/2023-11-02"},next:{title:"Introduction",permalink:"/oodlib/docs/lecture-notes/networks/2023-11-09"}},c={},d=[{value:"Input port function",id:"input-port-function",level:2},{value:"Longest Prefix Matching",id:"longest-prefix-matching",level:2},{value:"Switching fabric",id:"switching-fabric",level:2},{value:"Switching fabric #1. Memory",id:"switching-fabric-1-memory",level:2},{value:"Switching fabric #2. Bus",id:"switching-fabric-2-bus",level:2},{value:"Switching fabric #3. Interconnection network",id:"switching-fabric-3-interconnection-network",level:2},{value:"Output port contention",id:"output-port-contention",level:2},{value:"Buffer management is required.",id:"buffer-management-is-required",level:2},{value:"How much buffering?",id:"how-much-buffering",level:2},{value:"Buffer management",id:"buffer-management",level:2},{value:"Drop policy",id:"drop-policy",level:4},{value:"priority",id:"priority",level:4},{value:"round robin",id:"round-robin",level:4},{value:"Network priority",id:"network-priority",level:2},{value:"Network Neutrality",id:"network-neutrality",level:2}];function h(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Summary"})}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"keywords"})}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"TODO"})}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"HW"})}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Exercise"}),"*"]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Next time"})}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h1,{id:"router-architecture",children:"Router Architecture"}),"\n",(0,r.jsx)(n.h2,{id:"input-port-function",children:"Input port function"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["line termination(Physical layer)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"bit level reception"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["link layer protocol recieving","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ethernet"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["lookup, forwarding table, queueing","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"queueing happens at every port."}),"\n",(0,r.jsxs)(n.li,{children:["decentralized switching","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Destination-based forwarding"}),"\n",(0,r.jsx)(n.li,{children:"SDN (more fields to compare)"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"goal is to process at line speed. so, the calculations are excecuted at hardware level."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"longest-prefix-matching",children:"Longest Prefix Matching"}),"\n",(0,r.jsx)(n.h2,{id:"switching-fabric",children:"Switching fabric"}),"\n",(0,r.jsx)(n.p,{children:"Switching rate should be $NR$, where $R$ is the speed of each line.\nfabric designs are 3 types."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"memory, bus, interconnection network."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"switching-fabric-1-memory",children:"Switching fabric #1. Memory"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"past generation."}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"memory is the middle point."}),"\n",(0,r.jsx)(n.li,{children:"speed is limited by memory bandwidth."}),"\n",(0,r.jsx)(n.li,{children:"need two buses(input bus, output bus)"}),"\n",(0,r.jsx)(n.li,{children:"read&write is needed."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"switching-fabric-2-bus",children:"Switching fabric #2. Bus"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Bus (64bits of data can flow at a singular clock cycle)"}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Popular, but very expensive."}),"\n",(0,r.jsx)(n.li,{children:"speed is limited by bus bandwidth (bus contentation)"}),"\n",(0,r.jsx)(n.li,{children:"cutting-edge buses are 32 Gbps"}),"\n",(0,r.jsx)(n.li,{children:"bus contentation depends on how many/busy input ports are."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"switching-fabric-3-interconnection-network",children:"Switching fabric #3. Interconnection network"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"grid, and each pathways can be open or closed."}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Crossbar methods."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Initially developed for processor connection methods."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"If bus speed is R, and there are NR capacity (at most, by some sort of parallelism)"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"thus can meet the efficiency of bus method."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Even if we have less bandwidth, NR switching rate can be made because parallel switching is possible."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"up to 60 Gbps."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"limitation : when one pathway blocks other needed pathways."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Buffer management, scheduling algorithm should be implemented."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"output-port-contention",children:"Output port contention"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"HOL Blocking"})," occurs.  - when two packet destined to the same output port.\nThe other packet data should wait until one collection of data is passed."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Output buffer"})," comes in.\nWhen arrival rate exceeds output line speed.\nbut queueing delay and loss due to output port buffer overflow can happen."]}),"\n",(0,r.jsx)(n.h2,{id:"buffer-management-is-required",children:"Buffer management is required."}),"\n",(0,r.jsx)(n.p,{children:"3 tasks on buffer management"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"what should be the buffering size"}),"\n",(0,r.jsx)(n.li,{children:"drop policy (which to drop?)"}),"\n",(0,r.jsx)(n.li,{children:"scheduling discipline giving priority on each packets"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"how-much-buffering",children:"How much buffering?"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"${RTT*c}/{\\sqrt{N}}$\n"})}),"\n",(0,r.jsx)(n.p,{children:"Round Trip time is used.\n#todo : write about TCP flow and buffer."}),"\n",(0,r.jsx)(n.p,{children:"If you have too much buffer?"}),"\n",(0,r.jsx)(n.h2,{id:"buffer-management",children:"Buffer management"}),"\n",(0,r.jsx)(n.h4,{id:"drop-policy",children:"Drop policy"}),"\n",(0,r.jsx)(n.h4,{id:"priority",children:"priority"}),"\n",(0,r.jsx)(n.h4,{id:"round-robin",children:"round robin"}),"\n",(0,r.jsx)(n.p,{children:"#todo : fill out."}),"\n",(0,r.jsx)(n.h2,{id:"network-priority",children:"Network priority"}),"\n",(0,r.jsx)(n.p,{children:"#todo : fill out"}),"\n",(0,r.jsx)(n.h2,{id:"network-neutrality",children:"Network Neutrality"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"technical, social, economic, legal"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Three rules made in US, 2015"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"No blocking"}),"\n",(0,r.jsx)(n.li,{children:"No throttling"}),"\n",(0,r.jsx)(n.li,{children:"no paid prioritization"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h1,{id:"network-layer-protocol",children:"Network Layer Protocol"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"IP protocol"}),"\n",(0,r.jsx)(n.li,{children:"ICMP protocol (used in ping service)"}),"\n"]}),"\n",(0,r.jsx)(n.h1,{id:"ip-datagram-format",children:"IP datagram format"}),"\n",(0,r.jsx)(n.p,{children:"#todo : paste format image."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"source IP address"}),"\n",(0,r.jsx)(n.li,{children:"destination IP address"}),"\n",(0,r.jsx)(n.li,{children:"TTL : max hops, thus looping packets are prevented."}),"\n",(0,r.jsx)(n.li,{children:"upper layer protocol  (TCP, UDP..)"}),"\n",(0,r.jsxs)(n.li,{children:["header checksum (calculation to validate the data is intact). for some reliability","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"header checksum is only for header parts."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["16bit identifier, flags, fragment offset","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"router also does fragmentation. (actually a link layer process, but since they do not have processing power, network layer does it.)"}),"\n",(0,r.jsx)(n.li,{}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var r=i(96540);const t={},l=r.createContext(t);function s(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);